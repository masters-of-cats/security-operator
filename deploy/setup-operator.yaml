---
#The operator namespace
apiVersion: v1
kind: Namespace
metadata:
  name: operator

# The pod security policy custom resource definition
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  namespace: operator
  name: podsecuritypolicybindings.security.cloudfoundry.org
spec:
  group: security.cloudfoundry.org
  names:
    kind: PodSecurityPolicyBinding
    listKind: PodSecurityPolicyBindingList
    plural: podsecuritypolicybindings
    singular: podsecuritypolicybinding
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: PodSecurityPolicyBinding is the Schema for the podsecuritypolicybindings
        API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: PodSecurityPolicyBindingSpec defines the desired state of PodSecurityPolicyBinding
          type: object
        status:
          description: PodSecurityPolicyBindingStatus defines the observed state of
            PodSecurityPolicyBinding
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true

#---
# The operator service account
# apiVersion: v1
# kind: ServiceAccount
# metadata:
#   name: security-operator

---
#The operator cluster role (we allow it to use the gce.unprivileged-addon built-in GKE pod security policy so that it is allowed to create its pods once RBAC is already enabled)
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  namespace: operator
  name: security-operator
rules:
- apiGroups:
  - policy
  resources:
  - podsecuritypolicies
  verbs:
  - '*'
- apiGroups:
  - security.cloudfoundry.org
  resources:
  - podsecuritypolicybindings
  verbs:
  - '*'
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterroles
  verbs:
  - '*'
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - roles
  verbs:
  - '*'
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  verbs:
  - '*'
- apiGroups:
  - policy
  resources:
  - podsecuritypolicies
  resourceNames:
  - gce.unprivileged-addon
  verbs:
  - 'use'

---
# Bind the operator service account to the operator cluster role
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: operator
  name: security-operator
subjects:
- kind: ServiceAccount
  name: default
  namespace: operator
roleRef:
  kind: ClusterRole
  name: security-operator
  apiGroup: rbac.authorization.k8s.io

---
# Allow the operator to create pods
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: operator
  name: security-operator-pod-creator
subjects:
- kind: ServiceAccount
  name: default
  namespace: operator
roleRef:
  kind: ClusterRole
  name: edit
  apiGroup: rbac.authorization.k8s.io

---
# The operator
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: operator
  name: security-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      name: security-operator
  template:
    metadata:
      labels:
        name: security-operator
    spec:
      serviceAccountName: default
      containers:
        - name: security-operator
          # Replace this with the built image name
          image: docker.io/cfgarden/security-operator
          command:
          - security-operator
          imagePullPolicy: Always
          env:
            - name: WATCH_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: OPERATOR_NAME
              value: "security-operator"
